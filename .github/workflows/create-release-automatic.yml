name: Create Release Automatic

on:
  workflow_dispatch:
  schedule:
    - cron: '0 10 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout the agora-token-service repo
        uses: actions/checkout@v2
        with:
          repository: AgoraIO-Community/agora-token-service
          path: agora-token-service
          fetch-depth: 0

      - name: Get first stable tag (eg v1.0.0) which is not used by this repository
        id: get_tag
        run: |
            for tag in $(git -C agora-token-service tag -l --sort=creatordate | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$'); do
                if ! git tag -l | grep -q $tag; then
                    echo "Found tag $tag"
                    echo "RELEASE_VERSION=$tag" >> $GITHUB_ENV
                    exit 0
                fi
            done
            echo "No tag found"
            exit 1

      - name: Get Github Release Data
        id: release_data
        uses: KevinRohn/github-full-release-data@v2
        with:
          repository: AgoraIO-Community/agora-token-service
          version: ${{ env.RELEASE_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body-markdown-file-path: ./release-content.md

      # Using PAT (Personal Access Token) instead of GITHUB_TOKEN because GITHUB_TOKEN doesn't have permission to create release
      # And also if we use GITHUB_TOKEN, it will not trigger our other workflow (docker-publish.yml).
      # Github Actions prevent trigger workflow using GITHUB_TOKEN, to avoid infinite loop.
      - name: Create a release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body_path: ./release-content.md
          draft: false
          prerelease: false



